{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "defaultValue": "portnox-containerlab",
      "metadata": {
        "description": "Name of the virtual machine"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "labnox",
      "metadata": {
        "description": "Admin username for the VM"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine"
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D8s_v3",
      "metadata": {
        "description": "Size of the virtual machine (8 vCPUs, 32GB RAM recommended for ContainerLab)"
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "22.04-LTS",
      "allowedValues": [
        "20.04-LTS",
        "22.04-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "dataDiskSizeGB": {
      "type": "int",
      "defaultValue": 512,
      "metadata": {
        "description": "Size of the data disk for container images and labs"
      }
    },
    "networkSecurityGroupRules": {
      "type": "array",
      "defaultValue": [
        {
          "name": "SSH",
          "properties": {
            "priority": 1000,
            "protocol": "Tcp",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "22"
          }
        },
        {
          "name": "HTTP",
          "properties": {
            "priority": 1001,
            "protocol": "Tcp",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "80"
          }
        },
        {
          "name": "HTTPS",
          "properties": {
            "priority": 1002,
            "protocol": "Tcp",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "443"
          }
        },
        {
          "name": "Antimony-GUI",
          "properties": {
            "priority": 1003,
            "protocol": "Tcp",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "8080"
          }
        },
        {
          "name": "ContainerLab-API",
          "properties": {
            "priority": 1004,
            "protocol": "Tcp",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "8443"
          }
        },
        {
          "name": "RADIUS",
          "properties": {
            "priority": 1005,
            "protocol": "Udp",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "1812"
          }
        },
        {
          "name": "RADIUS-Accounting",
          "properties": {
            "priority": 1006,
            "protocol": "Udp",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "1813"
          }
        },
        {
          "name": "TACACS",
          "properties": {
            "priority": 1007,
            "protocol": "Tcp",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "49"
          }
        },
        {
          "name": "Lab-Services",
          "properties": {
            "priority": 1008,
            "protocol": "Tcp",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "8000-9000"
          }
        },
        {
          "name": "AllowInternetOutbound",
          "properties": {
            "priority": 2000,
            "protocol": "*",
            "access": "Allow",
            "direction": "Outbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "Internet",
            "destinationPortRange": "*"
          }
        },
        {
          "name": "AllowVnetOutbound",
          "properties": {
            "priority": 2001,
            "protocol": "*",
            "access": "Allow",
            "direction": "Outbound",
            "sourceAddressPrefix": "VirtualNetwork",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationPortRange": "*"
          }
        }
      ],
      "metadata": {
        "description": "Network security group rules for ContainerLab services"
      }
    }
  },
  "variables": {
    "nicName": "[concat(parameters('vmName'), '-nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "containerlab-subnet",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressName": "[concat(parameters('vmName'), '-pip')]",
    "virtualNetworkName": "[concat(parameters('vmName'), '-vnet')]",
    "networkSecurityGroupName": "[concat(parameters('vmName'), '-nsg')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "dataDiskName": "[concat(parameters('vmName'), '-datadisk')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[parameters('networkSecurityGroupRules')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-02-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(parameters('vmName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-02-01",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": true
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2021-04-01",
      "name": "[variables('dataDiskName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Premium_LRS"
      },
      "properties": {
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": "[parameters('dataDiskSizeGB')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
        "[resourceId('Microsoft.Compute/disks', variables('dataDiskName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]",
          "customData": "[base64(concat('#cloud-config\n\npackage_upgrade: true\n\npackages:\n  - docker.io\n  - docker-compose\n  - git\n  - curl\n  - wget\n  - jq\n  - python3-pip\n  - build-essential\n\nruncmd:\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ', parameters('adminUsername'), '\n  - mkdir -p /data/containerlab\n  - mkdir -p /data/labs\n  - mkdir -p /data/images\n  - mkdir -p /data/configs\n  - chown -R ', parameters('adminUsername'), ':', parameters('adminUsername'), ' /data\n  - curl -sL https://github.com/iammrherb/Portnox/raw/main/azure-deployment/scripts/setup-containerlab.sh -o /tmp/setup.sh\n  - chmod +x /tmp/setup.sh\n  - sudo -u ', parameters('adminUsername'), ' /tmp/setup.sh\n'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 128
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "[variables('dataDiskName')]",
              "createOption": "Attach",
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks', variables('dataDiskName'))]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    },
    "publicIP": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).ipAddress]"
    },
    "antimonyGuiUrl": {
      "type": "string",
      "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn, ':8080')]"
    },
    "containerlabApiUrl": {
      "type": "string",
      "value": "[concat('https://', reference(variables('publicIPAddressName')).dnsSettings.fqdn, ':8443')]"
    }
  }
}
